# Run this script under project root directory to generate __init__.pyi file for R.string module.
import os

from R.string.default import *
from mypy import stubgen

file_name = "res/R/string/__init__.pyi"


def generate_string_list_pyi(list_of_keys: list):
    """
    Generate a string list for Python type hinting.
    :param list_of_keys:
    :return:
    """
    with open(file_name, "w", encoding="utf-8") as f:
        for key in list_of_keys:
            f.write("%s: str\n" % key)


if __name__ == "__main__":
    print("cwd: {}".format(os.getcwd()))
    with open(file_name, "w", encoding="utf-8") as f:
        f.write("# This file is generated by res/R/string/gen_string_pyi.py\n\n")

        # Write objects' prototypes of R.string module using mypy to __init__.pyi
        stubgen.main(["-o", "keep_local/stubgen_out/", "-v", file_name[:-1]])
        with open("keep_local/stubgen_out/R/string/__init__.pyi", "r", encoding="utf-8") as f2:
            stub = f2.read()
            f.write(stub)
            f.write("\n\n")

        f.write(namespace.toHintClassStr(string_dict))
